---
# Set URL
- name: set NodeJS download URL (Linux x86-64)
  set_fact:
    node_download_url: "https://nodejs.org/dist/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-x64.tar.xz"
    node_dest_path: "{{ ansible_env.PWD }}/node-v{{ nodejs_version }}.tar.xz"
    node_unarchived_path: "{{ ansible_env.PWD }}/node-v{{ nodejs_version }}-linux-x64"
  when: ansible_system == "Linux" and ansible_userspace_bits == "64"
- name: download NodeJS (Linux x86)
  set_fact:
    node_download_url: "https://nodejs.org/dist/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-x86.tar.xz"
    node_dest_path: "{{ ansible_env.PWD }}/node-v{{ nodejs_version }}.tar.xz"
    node_unarchived_path: "{{ ansible_env.PWD }}/node-v{{ nodejs_version }}-linux-x86"
  when: ansible_system == "Linux" and ansible_userspace_bits == "32"

# NOTE: we set "node_dest_path" above because OS X version will be .tar.gz
# TODO: add download bits for OS X (and Windows???)

# Download and Unarchive
- name: download NodeJS
  get_url:
    url: "{{ node_download_url }}"
    dest: "{{ node_dest_path }}"
- name: unarchive NodeJS
  unarchive:
    copy: no
    src: "{{ node_dest_path }}"
    dest: "{{ ansible_env.PWD }}"
- name: rename unarchived NodeJS directory
  command: mv "{{ node_unarchived_path }}" "{{ nodejs_dir }}"

# Remove unnecessary files (downloaded archive and previous versions of NodeJS)
- name: remove downloaded NodeJS archive
  file: path="{{ node_dest_path }}" state=absent
- name: remove old NodeJS versions
  file: path="{{ ansible_env.PWD }}/nodejs-{{ item }}" state=absent
  with_items: "{{ nodejs_old_versions }}"
